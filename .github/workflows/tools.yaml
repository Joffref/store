name: Tools

on:
  push:
    branches: ["main"]
    paths:
      - "agent-tools/**"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  gen-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: diff
        uses: tj-actions/changed-files@v35
        with:
          files: agent-tools/**
          dir_names: true
          json: true
          json_raw_format: true
      - name: Generate tools matrix
        uses: actions/github-script@v7
        id: generator
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const method = "${{ github.event_name }}"
            if (method === "workflow_dispatch") {
              const fs = require('fs');
              const path = require('path');
              const toolsPath = path.join(process.cwd(), 'agent-tools');
              const tools = fs.readdirSync(toolsPath)
                            .filter(file => fs.statSync(path.join(toolsPath, file)).isDirectory());
              return { tools };
            }
            const all_changed_files = ${{ steps.diff.outputs.all_changed_files }}
            const toolSet = new Set(all_changed_files.filter(file => file.includes("agent-tools/")).map(file => file.split("/")[1]))
            const uniqueToolsArray = [...toolSet]

            return uniqueToolsArray.length ? { tools: uniqueToolsArray } : null
    outputs:
      matrix: ${{ steps.generator.outputs.result }}

  build-tool:
    if: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    needs: gen-matrix
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    steps:
      - name: Get short node version
        uses: actions/github-script@v7
        id: logger
        with:
          script: |
            console.log("${{ matrix.tools }}")
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          file: ./agent-tools/Dockerfile
          tags: ghcr.io/${{ github.repository_owner }}/agent-tools/${{ matrix.tools }}:latest
          build-args: |
            TOOL=${{ matrix.tools }}

  push-tool:
    if: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    needs:
      - build-tool
      - gen-matrix
    name: push-tool
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - run: npm install js-yaml node-fetch@2
      - name: Push tool
        uses: actions/github-script@v7
        env:
          STORE_URL: ${{ vars.STORE_URL }}
          ADMIN_USERNAME: ${{ secrets.STORE_ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.STORE_ADMIN_PASSWORD }}
          IMAGE: ghcr.io/${{ github.repository_owner }}/agent-tools/${{ matrix.tools }}:latest
        with:
          script: |
            const pushStore = require("./scripts/pushStore.js");
            pushStore("${{ matrix.tools }}");
